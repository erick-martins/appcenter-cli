/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Build configuration for Android projects
 *
 */
class BranchConfigurationToolsetsDistributionModel {
 /**
   * Create a DistributeInfo.
   * @property {array} [destinations] Array of objects {id:string, type:string}
   * with "id" being the distribution group ID, store ID, or tester email, and
   * "type" being "group", "store", or "tester"
   * @property {string} [releaseNotes] The release notes
   * @property {boolean} [isSilent]
   * @property {boolean} [notifyTesters] Default value: true .
   * @property {string} [releaseNotes] Default value: true .
   * @property {string} [destinationType] OBSOLETE. Will be removed in next
   * version. The destination type.<br>
   * <b>group</b>: The release distributed to internal groups and
   * distribution_groups details will be returned.<br>
   * <b>store</b>: The release distributed to external stores and
   * distribution_stores details will be returned. <br>
   * . Possible values include: 'group', 'store', 'tester'
   * @property {string} [destinationSubtype] Destination can be either store or
   * group. Possible values include: 'group', 'store', 'tester'
   */
  constructor() {
  }

  /**
   * Defines the metadata of BranchConfigurationToolsetsDistributionModel
   *
   * @returns {object} metadata of BranchConfigurationToolsetsDistributionModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BranchConfigurationToolsets_Distribution',
      type: {
        name: 'Composite',
        className: 'BranchConfigurationToolsetsDistributionModel',
        modelProperties: {
          destinations: {
            required: false,
            serializedName: 'destinations',
            type: {
              name: 'Sequence',
              element: {
                  type: {
                    name: 'String',
                  }
              }
            }
          },
          destinationType: {
            required: false,
            serializedName: 'destinationType',
            type: {
              name: 'String'
            }
          },
          destinationSubtype: {
            required: false,
            serializedName: 'destinationSubtype',
            type: {
              name: 'String'
            }
          },
          releaseNotes: {
            required: false,
            serializedName: 'releaseNotes',
            type: {
              name: 'String'
            }
          },
          isSilent: {
            required: false,
            serializedName: 'isSilent',
            type: {
              name: 'Boolean'
            }
          },
          notifyTesters: {
            required: false,
            serializedName: 'notifyTesters',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = BranchConfigurationToolsetsDistributionModel;
